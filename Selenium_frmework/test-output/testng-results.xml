<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="0" total="10" passed="9" failed="1" skipped="0">
  <reporter-output>
  </reporter-output>
  <suite started-at="2022-05-20T06:10:48Z" name="Default suite" finished-at="2022-05-20T06:10:53Z" duration-ms="5099">
    <groups>
    </groups>
    <test started-at="2022-05-20T06:10:48Z" name="Default test" finished-at="2022-05-20T06:10:53Z" duration-ms="5099">
      <class name="Tests_cases.Test_001">
        <test-method is-config="true" signature="setExtent()[pri:0, instance:Tests_cases.Test_001@499683c4]" started-at="2022-05-20T06:10:48Z" name="setExtent" finished-at="2022-05-20T06:10:48Z" duration-ms="78" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setExtent -->
        <test-method signature="alert_ssert()[pri:0, instance:Tests_cases.Test_001@499683c4]" started-at="2022-05-20T06:10:48Z" name="alert_ssert" finished-at="2022-05-20T06:10:48Z" duration-ms="153" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- alert_ssert -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:Tests_cases.Test_001@499683c4]" started-at="2022-05-20T06:10:48Z" name="getResult" finished-at="2022-05-20T06:10:48Z" duration-ms="2" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=alert_ssert status=SUCCESS method=Test_001.alert_ssert()[pri:0, instance:Tests_cases.Test_001@499683c4] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="mouser_assert()[pri:0, instance:Tests_cases.Test_001@499683c4]" started-at="2022-05-20T06:10:48Z" name="mouser_assert" finished-at="2022-05-20T06:10:48Z" duration-ms="29" status="FAIL">
          <exception class="org.openqa.selenium.interactions.MoveTargetOutOfBoundsException">
            <message>
              <![CDATA[(139, 708) is out of bounds of viewport width (1283) and height (689)
Build info: version: '4.1.3', revision: '7b1ebf28ef'
System info: host: 'MSI', ip: '192.168.210.28', os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '17.0.2'
Driver info: org.openqa.selenium.firefox.FirefoxDriver
Command: [4d0a530c-ca5b-4396-b724-0487178db450, actions {actions=[org.openqa.selenium.interactions.Sequence@10643593]}]
Capabilities {acceptInsecureCerts: true, browserName: firefox, browserVersion: 99.0, javascriptEnabled: true, moz:accessibilityChecks: false, moz:buildID: 20220330194208, moz:debuggerAddress: localhost:58990, moz:geckodriverVersion: 0.31.0, moz:headless: false, moz:processID: 5848, moz:profile: C:\Users\GL63\AppData\Local..., moz:shutdownTimeout: 60000, moz:useNonSpecCompliantPointerOrigin: false, moz:webdriverClick: true, pageLoadStrategy: normal, platform: WINDOWS, platformName: WINDOWS, platformVersion: 10.0, proxy: Proxy(), se:cdp: ws://localhost:58990/devtoo..., se:cdpVersion: 85.0, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify}
Session ID: 4d0a530c-ca5b-4396-b724-0487178db450]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.interactions.MoveTargetOutOfBoundsException: (139, 708) is out of bounds of viewport width (1283) and height (689)
Build info: version: '4.1.3', revision: '7b1ebf28ef'
System info: host: 'MSI', ip: '192.168.210.28', os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '17.0.2'
Driver info: org.openqa.selenium.firefox.FirefoxDriver
Command: [4d0a530c-ca5b-4396-b724-0487178db450, actions {actions=[org.openqa.selenium.interactions.Sequence@10643593]}]
Capabilities {acceptInsecureCerts: true, browserName: firefox, browserVersion: 99.0, javascriptEnabled: true, moz:accessibilityChecks: false, moz:buildID: 20220330194208, moz:debuggerAddress: localhost:58990, moz:geckodriverVersion: 0.31.0, moz:headless: false, moz:processID: 5848, moz:profile: C:\Users\GL63\AppData\Local..., moz:shutdownTimeout: 60000, moz:useNonSpecCompliantPointerOrigin: false, moz:webdriverClick: true, pageLoadStrategy: normal, platform: WINDOWS, platformName: WINDOWS, platformVersion: 10.0, proxy: Proxy(), se:cdp: ws://localhost:58990/devtoo..., se:cdpVersion: 85.0, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify}
Session ID: 4d0a530c-ca5b-4396-b724-0487178db450
at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:499)
at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:480)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:200)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:133)
at org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:53)
at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:184)
at org.openqa.selenium.remote.service.DriverCommandExecutor.invokeExecute(DriverCommandExecutor.java:167)
at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:142)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:567)
at org.openqa.selenium.remote.RemoteWebDriver.perform(RemoteWebDriver.java:635)
at org.openqa.selenium.interactions.Actions$BuiltAction.perform(Actions.java:656)
at org.openqa.selenium.interactions.Actions.perform(Actions.java:612)
at Functions.Function_f.mouse_hover(Function_f.java:126)
at Tests_cases.Test_001.mouser_assert(Test_001.java:114)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:583)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:719)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:989)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.interactions.MoveTargetOutOfBoundsException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- mouser_assert -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:Tests_cases.Test_001@499683c4]" started-at="2022-05-20T06:10:48Z" name="getResult" finished-at="2022-05-20T06:10:48Z" duration-ms="86" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=mouser_assert status=FAILURE method=Test_001.mouser_assert()[pri:0, instance:Tests_cases.Test_001@499683c4] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="table_assert()[pri:0, instance:Tests_cases.Test_001@499683c4]" started-at="2022-05-20T06:10:48Z" name="table_assert" finished-at="2022-05-20T06:10:48Z" duration-ms="33" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- table_assert -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:Tests_cases.Test_001@499683c4]" started-at="2022-05-20T06:10:48Z" name="getResult" finished-at="2022-05-20T06:10:48Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=table_assert status=SUCCESS method=Test_001.table_assert()[pri:0, instance:Tests_cases.Test_001@499683c4] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="test()[pri:0, instance:Tests_cases.Test_001@499683c4]" started-at="2022-05-20T06:10:48Z" name="test" finished-at="2022-05-20T06:10:49Z" duration-ms="180" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:Tests_cases.Test_001@499683c4]" started-at="2022-05-20T06:10:49Z" name="getResult" finished-at="2022-05-20T06:10:49Z" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=test status=SUCCESS method=Test_001.test()[pri:0, instance:Tests_cases.Test_001@499683c4] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="test_100()[pri:0, instance:Tests_cases.Test_001@499683c4]" started-at="2022-05-20T06:10:49Z" name="test_100" finished-at="2022-05-20T06:10:51Z" duration-ms="2139" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test_100 -->
        <test-method signature="test_200()[pri:0, instance:Tests_cases.Test_001@499683c4]" started-at="2022-05-20T06:10:51Z" name="test_200" finished-at="2022-05-20T06:10:52Z" duration-ms="914" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test_200 -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:Tests_cases.Test_001@499683c4]" started-at="2022-05-20T06:10:51Z" name="getResult" finished-at="2022-05-20T06:10:51Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=test_100 status=SUCCESS method=Test_001.test_100()[pri:0, instance:Tests_cases.Test_001@499683c4] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:Tests_cases.Test_001@499683c4]" started-at="2022-05-20T06:10:52Z" name="getResult" finished-at="2022-05-20T06:10:52Z" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=test_200 status=SUCCESS method=Test_001.test_200()[pri:0, instance:Tests_cases.Test_001@499683c4] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="drop_assert()[pri:1, instance:Tests_cases.Test_001@499683c4]" started-at="2022-05-20T06:10:52Z" name="drop_assert" finished-at="2022-05-20T06:10:52Z" duration-ms="50" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- drop_assert -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:Tests_cases.Test_001@499683c4]" started-at="2022-05-20T06:10:52Z" name="getResult" finished-at="2022-05-20T06:10:52Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=drop_assert status=SUCCESS method=Test_001.drop_assert()[pri:1, instance:Tests_cases.Test_001@499683c4] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="radio_asser()[pri:2, instance:Tests_cases.Test_001@499683c4]" started-at="2022-05-20T06:10:52Z" name="radio_asser" finished-at="2022-05-20T06:10:52Z" duration-ms="714" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- radio_asser -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:Tests_cases.Test_001@499683c4]" started-at="2022-05-20T06:10:52Z" name="getResult" finished-at="2022-05-20T06:10:52Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=radio_asser status=SUCCESS method=Test_001.radio_asser()[pri:2, instance:Tests_cases.Test_001@499683c4] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="check_assert()[pri:3, instance:Tests_cases.Test_001@499683c4]" started-at="2022-05-20T06:10:52Z" name="check_assert" finished-at="2022-05-20T06:10:53Z" duration-ms="514" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- check_assert -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:Tests_cases.Test_001@499683c4]" started-at="2022-05-20T06:10:53Z" name="getResult" finished-at="2022-05-20T06:10:53Z" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=check_assert status=SUCCESS method=Test_001.check_assert()[pri:3, instance:Tests_cases.Test_001@499683c4] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method signature="iFrame_assert()[pri:8, instance:Tests_cases.Test_001@499683c4]" started-at="2022-05-20T06:10:53Z" name="iFrame_assert" finished-at="2022-05-20T06:10:53Z" duration-ms="5" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- iFrame_assert -->
        <test-method is-config="true" signature="getResult(org.testng.ITestResult)[pri:0, instance:Tests_cases.Test_001@499683c4]" started-at="2022-05-20T06:10:53Z" name="getResult" finished-at="2022-05-20T06:10:53Z" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=iFrame_assert status=SUCCESS method=Test_001.iFrame_assert()[pri:8, instance:Tests_cases.Test_001@499683c4] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- getResult -->
        <test-method is-config="true" signature="endReport()[pri:0, instance:Tests_cases.Test_001@499683c4]" started-at="2022-05-20T06:10:53Z" name="endReport" finished-at="2022-05-20T06:10:53Z" duration-ms="177" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- endReport -->
      </class> <!-- Tests_cases.Test_001 -->
    </test> <!-- Default test -->
  </suite> <!-- Default suite -->
</testng-results>
